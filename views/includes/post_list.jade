style.
  #input-open-container {
    background-color: rgba(0,0,255,1.0);
    box-shadow: inset 0px 0px 5px black;
  }
  #input-open-button {
    box-shadow: 0px 0px 5px 0px black;
    background-color: transparent;
    margin: 15px;
    display: block;
    overflow: hidden;
    border-radius: 80px;
    transition: box-shadow 0.2s ease;
    position:absolute;
    top:0;
    bottom: 0;
    left:0;
    right:0;
    outline: 0;
  }
  #input-open-button:hover {
    transition: box-shadow 0.2s ease;
    box-shadow:
    0px 0px 0px 2px rgba(0,0,255,1.0),
      0px 0px 5px 5px white;
  }
  #input-open-button img {
    width: 160px;
    height: 160px;
    margin-left: -15px;
    margin-top: -15px;
  }
  .post-container {
    width: 160px;
    height: 160px;
    display: inline-block;
    position: relative;
    overflow: hidden;
    transition: opacity 1s ease;
    margin-bottom: -5px;
    box-shadow: 0 0 1px rgba(255,255,255,0.5);
  }
  .post {
    background-color: transparent;
    margin: 14px;
    display: block;
    box-shadow: inset 0px 0px 4px rgba(0,0,0,0.5);
    overflow: hidden;
    border-radius: 10px;
    vertical-align:middle;
    transition: box-shadow 0.5s 1s ease, margin 0.5s 1.5s ease, border-radius 0.5s 1.5s ease;
    position:absolute;
    top:0;
    bottom: 0;
    left:0;
    right:0;
    text-decoration: none;
    text-align: center;
    vertical-align: middle;
    color: black;
    outline: 0;
  }
  .post img {
    width: 160px;
    height: 160px;
    margin-top: -14px;
    margin-left: -14px;
    transition: margin 0.5s 1.5s ease;
  }
  .post-container:hover .post img {
    transition: margin 0.1s linear;
    margin: 0;
  }
  .post-container:hover .post {
    transition: box-shadow 0.1s linear, margin 0.1s linear, border-radius 0.1s linear;
    box-shadow: none;
    margin: 0;
    border-radius: 0;
  }
  .reply-count{
    display: inline-block;
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 5;
    padding: 20px;
    opacity: 0.5;
    color: #444;
    text-shadow: 0px 0px 2px #fff, 0px 0px 1px #fff;
    font-weight: 600;
    pointer-events: none;
  }
  .vote-score{
    display:none;
  }

mixin post_list(selector,allow_replies)
  .postList-container
    if(allow_replies)
      #input-open-container.post-container
        a#input-open-button(href='#')
          img(src='/s/reply-button.png')
        script.
          $(document).ready(function(){
            var hide_overlay = function(){$('#input-overlay').css('display','none');};
            $('#input-open-container').click(function(){$('#input-overlay').css('display','block');});
            $('#input-overlay-background').click(hide_overlay);
            $(document).keydown(function(event){if(event.which===27) hide_overlay();});
          });
    span#postList
    script.
      $(document).ready(function(){
        var score_max = 10;
        var score_min = -5;
        
        var get_score_color = function(vote_score){
          if(vote_score < 0){
            var rel = 1-vote_score/score_min;
            return 'rgba(63,63,127,'+(1-rel)+')';
            }
          else if(vote_score > 0){
            var rel = 1-vote_score/score_max;
            return 'rgba(255,127,0,'+(1-rel)+')';
            }
          else {
            return 'rgba(255,255,255,0)';
          }
        }
        
        var recolor_all = function(){
          $('#postList .post-container').each(function(){
            $(this).css({'background-color':get_score_color(parseInt($(this).find('.vote-score').html()))});
          });
        }
        
        var check_score_bounds = function(vote_score) {
          if(vote_score > score_max){
            score_max = vote_score;
            recolor_all();
          }
          else if(vote_score < score_min){
            score_min = vote_score;
            recolor_all();
          }
        }
        
        var make_post = function(msg) {
          var post_container = $('<div class=post-container>');
          var post = $('<a class=post id=p'+msg['post_id']+' href=/'+msg['post_id']+'>');
          var image = $('<img class=content src=/i/'+msg['content']+'.png>')
          var num_replies = msg['num_replies'];
          var vote_score = msg['vote_score'];
          var num_replies_view = $('<div class=reply-count>').html(num_replies);
          var vote_score_view = $('<div class=vote-score>').html(vote_score);
          
          post_container.append(num_replies_view);
          post_container.append(vote_score_view);
          post.append(image);
          post_container.append(post);
          post_container.css({
            'opacity':'0',
            'background-color':get_score_color(msg['vote_score'])
          });
          image.one('load',function(){post_container.css('opacity',1)}).each(function(){if(this.complete) $(this).load();});
          
          if(msg['requester_vote']==1){
            post.css('box-shadow','0px 0px 5px 5px rgba(255,127,0,0.75)');
          }
          else if(msg['requester_vote']==-1){
            post.css('box-shadow','0px 0px 5px 5px rgba(63,63,137,0.75)');
          }
          
          socket.on('vote_score['+msg['post_id']+']:update',function(msg){
            vote_score = msg['vote_score'];
            vote_score_view.html(vote_score);
            check_score_bounds(vote_score);
            post_container.css({'background-color':get_score_color(vote_score)});
          });
          socket.on('num_replies['+msg['post_id']+']:delta',function(msg){
            num_replies += msg['num_replies'];
            num_replies_view.html(num_replies);
          });
          return post_container;
        }
        
        // TODO verify selector (in case of multiple lists on same page)
        socket.on('message', function(msg){
          //check_score_bounds(msg['vote_score']);
          $('#postList').prepend(make_post(msg));
        });
        
        socket.on('get_posts_matching:success',function(msg){
          for(var i = 0; i < msg.length; i++){
            score_max = Math.max(score_max,msg[i]['vote_score'])
            score_min = Math.min(score_min,msg[i]['vote_score'])
          }
          for(var i = 0; i < msg.length; i++){
            console.log('a');
            $('#postList').prepend(make_post(msg[i]));
          }
        });
        socket.emit('get_posts_matching',!{JSON.stringify(selector)});
        
      });
